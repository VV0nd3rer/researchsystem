package view;

import controller.MainController;
import java.util.Vector;

public class SecurityLevePanell extends javax.swing.JPanel {

   private MainController control = null;
   private TablesView tableSecurity = null;
   private TablesView tableThreats = null;
    
    public SecurityLevePanell() {
        initComponents();
        control = MainController.getInstance();
        tableSecurity = new TablesView(SecurityTable);
        tableThreats = new TablesView(ThreatTable);
        
        showTables();
        showDLPTitle();
        tableSecurity.addIdModel();
        tableThreats.addOtherModel();
    }

    private Vector columnsName(MainController.TextQuery _table) {
        Vector columnNames = new Vector();     
        switch (_table) {
            case SECURITYLEVEL:
                 columnNames.addElement("Num");
                 columnNames.addElement("Level");
                 columnNames.addElement("Description");
                 columnNames.addElement("Percentage");
                break;
            case THREATS:
                break;
            default:
                break;
        }
         return columnNames;
    }
    
    private void showDLPTitle() {
        DLPLabel.setText(control.getAuditSelected());
    }
    
    //TODO like rs.getString("USER_ID");
    private Vector getOptionalRec(Vector _vec) {
        Vector res = new Vector();
         for (int i = 0; i < _vec.size(); i++) {
             res.add(((Vector) _vec.get(i)).get(1));
             System.out.println("Columns: " + ((Vector) _vec.get(i)).get(1));
             System.out.println("res: " + res);
         } 
         return res;
    }
    
    private void showTables() {
        //First table - security level in percentage
         tableSecurity.data = control.findRecord(control.textQuery.SECURITYLEVEL);
         tableSecurity.fillTable(columnsName(control.textQuery.SECURITYLEVEL));
         
        //Second table - threat analysis
        Vector rec = new Vector();
         //Title of columns: 1 group, 2 group, 3 group of level security
         rec = control.findRecord(control.textQuery.SECURITYLEVEL);
         Vector threatsCol = getOptionalRec(rec);         
         //First columns with threats
         rec = control.findRecord(control.textQuery.THREATS);
         tableThreats.data = getOptionalRec(rec);

         tableThreats.fillRowHeadTable();
         tableThreats.fillColumnHeadTable(threatsCol);
    }
    
    private void updateLevel() {
        control.updateRecord(tableSecurity.changeNum, tableSecurity.data, control.textQuery.SECURITYLEVEL);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StatisticsPanel = new javax.swing.JPanel();
        IllustrationLabel = new javax.swing.JLabel();
        DLPLabel = new javax.swing.JLabel();
        SecurityClassLabel = new javax.swing.JLabel();
        SecurityScrollPane = new javax.swing.JScrollPane();
        SecurityTable = new javax.swing.JTable();
        SecurityButton = new javax.swing.JButton();
        ThreatLabel = new javax.swing.JLabel();
        ThreatScrollPane = new javax.swing.JScrollPane();
        ThreatTable = new javax.swing.JTable();
        ThreatUpdate = new javax.swing.JButton();

        IllustrationLabel.setText("Current DLP-system on the enterprise");

        DLPLabel.setText("jLabel2");

        SecurityClassLabel.setText("Percentage of system accessories to the classes of security");

        SecurityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        SecurityScrollPane.setViewportView(SecurityTable);

        SecurityButton.setText("Update");
        SecurityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecurityButtonActionPerformed(evt);
            }
        });

        ThreatLabel.setText("Threat analysis");

        ThreatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ThreatScrollPane.setViewportView(ThreatTable);

        ThreatUpdate.setText("Update");
        ThreatUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThreatUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StatisticsPanelLayout = new javax.swing.GroupLayout(StatisticsPanel);
        StatisticsPanel.setLayout(StatisticsPanelLayout);
        StatisticsPanelLayout.setHorizontalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ThreatUpdate)
                    .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ThreatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ThreatLabel)
                        .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DLPLabel)
                            .addComponent(IllustrationLabel)
                            .addComponent(SecurityClassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SecurityButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SecurityScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        StatisticsPanelLayout.setVerticalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(IllustrationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DLPLabel)
                .addGap(18, 18, 18)
                .addComponent(SecurityClassLabel)
                .addGap(18, 18, 18)
                .addComponent(SecurityScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SecurityButton)
                .addGap(18, 18, 18)
                .addComponent(ThreatLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ThreatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ThreatUpdate)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(StatisticsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(StatisticsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ThreatUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThreatUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThreatUpdateActionPerformed

    private void SecurityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecurityButtonActionPerformed
        
    }//GEN-LAST:event_SecurityButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DLPLabel;
    private javax.swing.JLabel IllustrationLabel;
    private javax.swing.JButton SecurityButton;
    private javax.swing.JLabel SecurityClassLabel;
    private javax.swing.JScrollPane SecurityScrollPane;
    private javax.swing.JTable SecurityTable;
    private javax.swing.JPanel StatisticsPanel;
    private javax.swing.JLabel ThreatLabel;
    private javax.swing.JScrollPane ThreatScrollPane;
    private javax.swing.JTable ThreatTable;
    private javax.swing.JButton ThreatUpdate;
    // End of variables declaration//GEN-END:variables
}
