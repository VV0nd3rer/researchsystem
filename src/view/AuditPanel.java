package view;

import controller.MainController;
import java.util.Vector;
import javax.swing.*;

public class AuditPanel extends JPanel {
    private MainController control = null;
    private TablesView tableView = null;
    
    public AuditPanel() {
        control = MainController.getInstance();
        initComponents();
        tableView = new TablesView(AuditTable);
        showTable();
        loadEnterprisesComboBox();
        //tableView.addIdModel();
        //tableView.addListener();
    }

    private Vector columnsName() {
        Vector columnNames = new Vector();     
         columnNames.addElement("Num");
         columnNames.addElement("Name");
         columnNames.addElement("Level");
         return columnNames;
    }
    
     private void showTable() {
         tableView.data = control.findRecord(control.textQuery.AUDITCLIENT);
         tableView.columns = columnsName();
         tableView.fillTable();
    }
    
    private void loadEnterprisesComboBox() {
        Vector res = control.findRecord(control.textQuery.ENTERPRISES);
        for (int i = 0; i < res.size(); i++ ) {
            int index = (Integer)((Vector)res.get(i)).get(0);
            String value = ((Vector)res.get(i)).get(1).toString();
                                     
            EnterprisesComboBox.addItem(new Item(index, value));
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AuditScrollPane = new javax.swing.JScrollPane();
        AuditTable = new javax.swing.JTable();
        AuditLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        EnterprisesComboBox = new javax.swing.JComboBox();

        setMaximumSize(null);

        AuditTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        AuditScrollPane.setViewportView(AuditTable);

        AuditLabel.setText("Audits");

        jLabel1.setText("Новый аудит");

        EnterprisesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterprisesComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AuditScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(AuditLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EnterprisesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(339, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(AuditLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AuditScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(EnterprisesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EnterprisesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterprisesComboBoxActionPerformed
       if (evt.getSource().equals(EnterprisesComboBox)) {
         EnterprisesComboBox = (JComboBox) evt.getSource();
         Item item = (Item) EnterprisesComboBox.getSelectedItem();
         if(item!=null){
              System.out.println("Database Index:"+item.getId());
         }
   }
    }//GEN-LAST:event_EnterprisesComboBoxActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AuditLabel;
    private javax.swing.JScrollPane AuditScrollPane;
    private javax.swing.JTable AuditTable;
    private javax.swing.JComboBox EnterprisesComboBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}

 class Item {
        private int id;
        private String description;
        public Item(int id, String description) {
            this.id = id;
            this.description = description;
        }
        public int getId() {
            return id;
        }
        public String getDescription() {
            return description;
        }
        public String toString() {
            return description;
        }
}